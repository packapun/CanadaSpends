version: '3.4'  
services:
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    command: python src/main.py
    healthcheck:
      test: curl -f http://localhost:8000/health
      interval: 30s
      timeout: 10s
      retries: 60
      start_period: 300s
    volumes:
      - ./src:/app/src
      - ./sqlite:/app/data
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - COHERE_API_KEY=${COHERE_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - PYTHONPATH=/app/src
      - SKIP_REINDEX=${SKIP_REINDEX:-false}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    ports:
      - "8000:8000"
    restart: always
    networks:
      query-network:
        aliases:
          - api

  slackbot:
    build:
      context: ./slackbot
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./slackbot/src:/app/slackbot/src
    environment:
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - API_URL=http://api:8000
      - PORT=${PORT:-3000}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    depends_on:
      - api
    restart: always
    networks:
      query-network:
        aliases:
          - slackbot

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      # Port 443 commented out until SSL is properly configured
      # - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/html:/usr/share/nginx/html
    depends_on:
      - api
      - slackbot
    restart: always
    networks:
      - query-network
  
  chat-ui:
    build:
      context: ./chat-ui
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      query-network:
        aliases:
          - chat-ui

networks:
  query-network:
    driver: bridge

volumes:
  sqlite_data:
    driver: local